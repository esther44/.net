//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WindowsFormsApp1.NS1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="NS1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetPrixTotal", ReplyAction="http://tempuri.org/IService1/GetPrixTotalResponse")]
        decimal GetPrixTotal(int quantite, decimal prix);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/GetPrixTotal", ReplyAction="http://tempuri.org/IService1/GetPrixTotalResponse")]
        System.IAsyncResult BeginGetPrixTotal(int quantite, decimal prix, System.AsyncCallback callback, object asyncState);
        
        decimal EndGetPrixTotal(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetPrixTotalHT", ReplyAction="http://tempuri.org/IService1/GetPrixTotalHTResponse")]
        decimal GetPrixTotalHT(decimal prixTotalTTC);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/GetPrixTotalHT", ReplyAction="http://tempuri.org/IService1/GetPrixTotalHTResponse")]
        System.IAsyncResult BeginGetPrixTotalHT(decimal prixTotalTTC, System.AsyncCallback callback, object asyncState);
        
        decimal EndGetPrixTotalHT(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : WindowsFormsApp1.NS1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPrixTotalCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPrixTotalCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public decimal Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetPrixTotalHTCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetPrixTotalHTCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public decimal Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<WindowsFormsApp1.NS1.IService1>, WindowsFormsApp1.NS1.IService1 {
        
        private BeginOperationDelegate onBeginGetPrixTotalDelegate;
        
        private EndOperationDelegate onEndGetPrixTotalDelegate;
        
        private System.Threading.SendOrPostCallback onGetPrixTotalCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetPrixTotalHTDelegate;
        
        private EndOperationDelegate onEndGetPrixTotalHTDelegate;
        
        private System.Threading.SendOrPostCallback onGetPrixTotalHTCompletedDelegate;
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<GetPrixTotalCompletedEventArgs> GetPrixTotalCompleted;
        
        public event System.EventHandler<GetPrixTotalHTCompletedEventArgs> GetPrixTotalHTCompleted;
        
        public decimal GetPrixTotal(int quantite, decimal prix) {
            return base.Channel.GetPrixTotal(quantite, prix);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPrixTotal(int quantite, decimal prix, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPrixTotal(quantite, prix, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public decimal EndGetPrixTotal(System.IAsyncResult result) {
            return base.Channel.EndGetPrixTotal(result);
        }
        
        private System.IAsyncResult OnBeginGetPrixTotal(object[] inValues, System.AsyncCallback callback, object asyncState) {
            int quantite = ((int)(inValues[0]));
            decimal prix = ((decimal)(inValues[1]));
            return this.BeginGetPrixTotal(quantite, prix, callback, asyncState);
        }
        
        private object[] OnEndGetPrixTotal(System.IAsyncResult result) {
            decimal retVal = this.EndGetPrixTotal(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPrixTotalCompleted(object state) {
            if ((this.GetPrixTotalCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPrixTotalCompleted(this, new GetPrixTotalCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPrixTotalAsync(int quantite, decimal prix) {
            this.GetPrixTotalAsync(quantite, prix, null);
        }
        
        public void GetPrixTotalAsync(int quantite, decimal prix, object userState) {
            if ((this.onBeginGetPrixTotalDelegate == null)) {
                this.onBeginGetPrixTotalDelegate = new BeginOperationDelegate(this.OnBeginGetPrixTotal);
            }
            if ((this.onEndGetPrixTotalDelegate == null)) {
                this.onEndGetPrixTotalDelegate = new EndOperationDelegate(this.OnEndGetPrixTotal);
            }
            if ((this.onGetPrixTotalCompletedDelegate == null)) {
                this.onGetPrixTotalCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPrixTotalCompleted);
            }
            base.InvokeAsync(this.onBeginGetPrixTotalDelegate, new object[] {
                        quantite,
                        prix}, this.onEndGetPrixTotalDelegate, this.onGetPrixTotalCompletedDelegate, userState);
        }
        
        public decimal GetPrixTotalHT(decimal prixTotalTTC) {
            return base.Channel.GetPrixTotalHT(prixTotalTTC);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetPrixTotalHT(decimal prixTotalTTC, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetPrixTotalHT(prixTotalTTC, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public decimal EndGetPrixTotalHT(System.IAsyncResult result) {
            return base.Channel.EndGetPrixTotalHT(result);
        }
        
        private System.IAsyncResult OnBeginGetPrixTotalHT(object[] inValues, System.AsyncCallback callback, object asyncState) {
            decimal prixTotalTTC = ((decimal)(inValues[0]));
            return this.BeginGetPrixTotalHT(prixTotalTTC, callback, asyncState);
        }
        
        private object[] OnEndGetPrixTotalHT(System.IAsyncResult result) {
            decimal retVal = this.EndGetPrixTotalHT(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetPrixTotalHTCompleted(object state) {
            if ((this.GetPrixTotalHTCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetPrixTotalHTCompleted(this, new GetPrixTotalHTCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetPrixTotalHTAsync(decimal prixTotalTTC) {
            this.GetPrixTotalHTAsync(prixTotalTTC, null);
        }
        
        public void GetPrixTotalHTAsync(decimal prixTotalTTC, object userState) {
            if ((this.onBeginGetPrixTotalHTDelegate == null)) {
                this.onBeginGetPrixTotalHTDelegate = new BeginOperationDelegate(this.OnBeginGetPrixTotalHT);
            }
            if ((this.onEndGetPrixTotalHTDelegate == null)) {
                this.onEndGetPrixTotalHTDelegate = new EndOperationDelegate(this.OnEndGetPrixTotalHT);
            }
            if ((this.onGetPrixTotalHTCompletedDelegate == null)) {
                this.onGetPrixTotalHTCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetPrixTotalHTCompleted);
            }
            base.InvokeAsync(this.onBeginGetPrixTotalHTDelegate, new object[] {
                        prixTotalTTC}, this.onEndGetPrixTotalHTDelegate, this.onGetPrixTotalHTCompletedDelegate, userState);
        }
    }
}
